# Dependencies
node_modules/
frontend/node_modules/
backend/node_modules/

# Python Virtual Environment (adjust if you used a different name)
backend/pyenv/
backend/venv/

# Build output (if you build the frontend)
frontend/dist/

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Temporary uploads directory
backend/uploads/

# Directory for instrumented libs generated by jscover/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-intermediate-files)
.grunt

# Bower dependency directory (if used)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Optional dependency directory
jspm_packages/

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env*.local
.env.*.local

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build output
.nuxt
dist

# Gatsby files
.cache/
# Add node_modules in Gatsby .cache to reduce noise during scanning.
.cache/node_modules
public

# Service Worker Generated Files (useful for PWA)
sw.js
workbox-*.js

# Mac specific
.DS_Store

# Windows specific
Thumbs.db

# VS Code specific
.vscode/

# PyCharm specific
.idea/

# Python cache
__pycache__/
*.py[cod]
*$py.class